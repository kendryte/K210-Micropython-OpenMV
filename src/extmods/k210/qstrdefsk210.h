QDEF(MP_QSTR_k210, (const byte*)"\x9d\x04" "k210")
QDEF(MP_QSTR_FFT, (const byte*)"\xf1\x03" "FFT")
QDEF(MP_QSTR_run, (const byte*)"\x6c\x03" "run")
//QDEF(MP_QSTR_input, (const byte*)"\x73\x05" "input")
QDEF(MP_QSTR_shift, (const byte*)"\x85\x05" "shift")
QDEF(MP_QSTR_direction, (const byte*)"\x20\x09" "direction")
QDEF(MP_QSTR_DIR_BACKWARD, (const byte*)"\x0e\x0c" "DIR_BACKWARD")
QDEF(MP_QSTR_DIR_FORWARD, (const byte*)"\x7e\x0b" "DIR_FORWARD")

QDEF(MP_QSTR_I2S, (const byte*)"\x4d\x03" "I2S")
QDEF(MP_QSTR_play, (const byte*)"\x21\x04" "play")
QDEF(MP_QSTR_device, (const byte*)"\x3d\x06" "device")
QDEF(MP_QSTR_workmode, (const byte*)"\x07\x08" "workmode")
QDEF(MP_QSTR_sample_rate, (const byte*)"\x7e\x0b" "sample_rate")
QDEF(MP_QSTR_bps, (const byte*)"\xc4\x03" "bps")
QDEF(MP_QSTR_track_num, (const byte*)"\xc3\x09" "track_num")
QDEF(MP_QSTR_set_param, (const byte*)"\x37\x09" "set_param")
QDEF(MP_QSTR_TRANSMITTER, (const byte*)"\x2c\x0b" "TRANSMITTER")
QDEF(MP_QSTR_RECEIVER, (const byte*)"\x3c\x08" "RECEIVER")
QDEF(MP_QSTR_record, (const byte*)"\x28\x06" "record")

QDEF(MP_QSTR_FPIOA, (const byte*)"\x94\x05" "FPIOA")
QDEF(MP_QSTR_set_function, (const byte*)"\xba\x0c" "set_function")
//QDEF(MP_QSTR_pin, (const byte*)"\xf2\x03" "pin")
//QDEF(MP_QSTR_func, (const byte*)"\x1b\x04" "func")
QDEF(MP_QSTR_set_sl, (const byte*)"\xe7\x06" "set_sl")
QDEF(MP_QSTR_set_st, (const byte*)"\xff\x06" "set_st")
QDEF(MP_QSTR_set_io_driving, (const byte*)"\x68\x0e" "set_io_driving")
QDEF(MP_QSTR_get_io_by_function, (const byte*)"\x93\x12" "get_io_by_function")

QDEF(MP_QSTR_JTAG_TCLK, (const byte*)"\xd2\x09" "JTAG_TCLK")
QDEF(MP_QSTR_JTAG_TDI, (const byte*)"\x9b\x08" "JTAG_TDI")
QDEF(MP_QSTR_JTAG_TMS, (const byte*)"\xa8\x08" "JTAG_TMS")
QDEF(MP_QSTR_JTAG_TDO, (const byte*)"\x9d\x08" "JTAG_TDO")
QDEF(MP_QSTR_SPI0_D0, (const byte*)"\x74\x07" "SPI0_D0")
QDEF(MP_QSTR_SPI0_D1, (const byte*)"\x75\x07" "SPI0_D1")
QDEF(MP_QSTR_SPI0_D2, (const byte*)"\x76\x07" "SPI0_D2")
QDEF(MP_QSTR_SPI0_D3, (const byte*)"\x77\x07" "SPI0_D3")
QDEF(MP_QSTR_SPI0_D4, (const byte*)"\x70\x07" "SPI0_D4")
QDEF(MP_QSTR_SPI0_D5, (const byte*)"\x71\x07" "SPI0_D5")
QDEF(MP_QSTR_SPI0_D6, (const byte*)"\x72\x07" "SPI0_D6")
QDEF(MP_QSTR_SPI0_D7, (const byte*)"\x73\x07" "SPI0_D7")
QDEF(MP_QSTR_SPI0_SS0, (const byte*)"\x50\x08" "SPI0_SS0")
QDEF(MP_QSTR_SPI0_SS1, (const byte*)"\x51\x08" "SPI0_SS1")
QDEF(MP_QSTR_SPI0_SS2, (const byte*)"\x52\x08" "SPI0_SS2")
QDEF(MP_QSTR_SPI0_SS3, (const byte*)"\x53\x08" "SPI0_SS3")
QDEF(MP_QSTR_SPI0_ARB, (const byte*)"\x51\x08" "SPI0_ARB")
QDEF(MP_QSTR_SPI0_SCLK, (const byte*)"\xf7\x09" "SPI0_SCLK")
QDEF(MP_QSTR_UARTHS_RX, (const byte*)"\xb9\x09" "UARTHS_RX")
QDEF(MP_QSTR_UARTHS_TX, (const byte*)"\xff\x09" "UARTHS_TX")
QDEF(MP_QSTR_CLK_SPI1, (const byte*)"\x25\x08" "CLK_SPI1")
QDEF(MP_QSTR_CLK_I2C1, (const byte*)"\x17\x08" "CLK_I2C1")
QDEF(MP_QSTR_GPIOHS0, (const byte*)"\xdf\x07" "GPIOHS0")
QDEF(MP_QSTR_GPIOHS1, (const byte*)"\xde\x07" "GPIOHS1")
QDEF(MP_QSTR_GPIOHS2, (const byte*)"\xdd\x07" "GPIOHS2")
QDEF(MP_QSTR_GPIOHS3, (const byte*)"\xdc\x07" "GPIOHS3")
QDEF(MP_QSTR_GPIOHS4, (const byte*)"\xdb\x07" "GPIOHS4")
QDEF(MP_QSTR_GPIOHS5, (const byte*)"\xda\x07" "GPIOHS5")
QDEF(MP_QSTR_GPIOHS6, (const byte*)"\xd9\x07" "GPIOHS6")
QDEF(MP_QSTR_GPIOHS7, (const byte*)"\xd8\x07" "GPIOHS7")
QDEF(MP_QSTR_GPIOHS8, (const byte*)"\xd7\x07" "GPIOHS8")
QDEF(MP_QSTR_GPIOHS9, (const byte*)"\xd6\x07" "GPIOHS9")
QDEF(MP_QSTR_GPIOHS10, (const byte*)"\xae\x08" "GPIOHS10")
QDEF(MP_QSTR_GPIOHS11, (const byte*)"\xaf\x08" "GPIOHS11")
QDEF(MP_QSTR_GPIOHS12, (const byte*)"\xac\x08" "GPIOHS12")
QDEF(MP_QSTR_GPIOHS13, (const byte*)"\xad\x08" "GPIOHS13")
QDEF(MP_QSTR_GPIOHS14, (const byte*)"\xaa\x08" "GPIOHS14")
QDEF(MP_QSTR_GPIOHS15, (const byte*)"\xab\x08" "GPIOHS15")
QDEF(MP_QSTR_GPIOHS16, (const byte*)"\xa8\x08" "GPIOHS16")
QDEF(MP_QSTR_GPIOHS17, (const byte*)"\xa9\x08" "GPIOHS17")
QDEF(MP_QSTR_GPIOHS18, (const byte*)"\xa6\x08" "GPIOHS18")
QDEF(MP_QSTR_GPIOHS19, (const byte*)"\xa7\x08" "GPIOHS19")
QDEF(MP_QSTR_GPIOHS20, (const byte*)"\x4d\x08" "GPIOHS20")
QDEF(MP_QSTR_GPIOHS21, (const byte*)"\x4c\x08" "GPIOHS21")
QDEF(MP_QSTR_GPIOHS22, (const byte*)"\x4f\x08" "GPIOHS22")
QDEF(MP_QSTR_GPIOHS23, (const byte*)"\x4e\x08" "GPIOHS23")
QDEF(MP_QSTR_GPIOHS24, (const byte*)"\x49\x08" "GPIOHS24")
QDEF(MP_QSTR_GPIOHS25, (const byte*)"\x48\x08" "GPIOHS25")
QDEF(MP_QSTR_GPIOHS26, (const byte*)"\x4b\x08" "GPIOHS26")
QDEF(MP_QSTR_GPIOHS27, (const byte*)"\x4a\x08" "GPIOHS27")
QDEF(MP_QSTR_GPIOHS28, (const byte*)"\x45\x08" "GPIOHS28")
QDEF(MP_QSTR_GPIOHS29, (const byte*)"\x44\x08" "GPIOHS29")
QDEF(MP_QSTR_GPIOHS30, (const byte*)"\x6c\x08" "GPIOHS30")
QDEF(MP_QSTR_GPIOHS31, (const byte*)"\x6d\x08" "GPIOHS31")
QDEF(MP_QSTR_GPIO0, (const byte*)"\xa4\x05" "GPIO0")
QDEF(MP_QSTR_GPIO1, (const byte*)"\xa5\x05" "GPIO1")
QDEF(MP_QSTR_GPIO2, (const byte*)"\xa6\x05" "GPIO2")
QDEF(MP_QSTR_GPIO3, (const byte*)"\xa7\x05" "GPIO3")
QDEF(MP_QSTR_GPIO4, (const byte*)"\xa0\x05" "GPIO4")
QDEF(MP_QSTR_GPIO5, (const byte*)"\xa1\x05" "GPIO5")
QDEF(MP_QSTR_GPIO6, (const byte*)"\xa2\x05" "GPIO6")
QDEF(MP_QSTR_GPIO7, (const byte*)"\xa3\x05" "GPIO7")
QDEF(MP_QSTR_UART1_RX, (const byte*)"\x33\x08" "UART1_RX")
QDEF(MP_QSTR_UART1_TX, (const byte*)"\xf5\x08" "UART1_TX")
QDEF(MP_QSTR_UART2_RX, (const byte*)"\x50\x08" "UART2_RX")
QDEF(MP_QSTR_UART2_TX, (const byte*)"\x96\x08" "UART2_TX")
QDEF(MP_QSTR_UART3_RX, (const byte*)"\xf1\x08" "UART3_RX")
QDEF(MP_QSTR_UART3_TX, (const byte*)"\x37\x08" "UART3_TX")
QDEF(MP_QSTR_SPI1_D0, (const byte*)"\xd5\x07" "SPI1_D0")
QDEF(MP_QSTR_SPI1_D1, (const byte*)"\xd4\x07" "SPI1_D1")
QDEF(MP_QSTR_SPI1_D2, (const byte*)"\xd7\x07" "SPI1_D2")
QDEF(MP_QSTR_SPI1_D3, (const byte*)"\xd6\x07" "SPI1_D3")
QDEF(MP_QSTR_SPI1_D4, (const byte*)"\xd1\x07" "SPI1_D4")
QDEF(MP_QSTR_SPI1_D5, (const byte*)"\xd0\x07" "SPI1_D5")
QDEF(MP_QSTR_SPI1_D6, (const byte*)"\xd3\x07" "SPI1_D6")
QDEF(MP_QSTR_SPI1_D7, (const byte*)"\xd2\x07" "SPI1_D7")
QDEF(MP_QSTR_SPI1_SS0, (const byte*)"\xd1\x08" "SPI1_SS0")
QDEF(MP_QSTR_SPI1_SS1, (const byte*)"\xd0\x08" "SPI1_SS1")
QDEF(MP_QSTR_SPI1_SS2, (const byte*)"\xd3\x08" "SPI1_SS2")
QDEF(MP_QSTR_SPI1_SS3, (const byte*)"\xd2\x08" "SPI1_SS3")
QDEF(MP_QSTR_SPI1_ARB, (const byte*)"\x10\x08" "SPI1_ARB")
QDEF(MP_QSTR_SPI1_SCLK, (const byte*)"\x16\x09" "SPI1_SCLK")
QDEF(MP_QSTR_SPI_SLAVE_D0, (const byte*)"\xd6\x0c" "SPI_SLAVE_D0")
QDEF(MP_QSTR_SPI_SLAVE_SS, (const byte*)"\x02\x0c" "SPI_SLAVE_SS")
QDEF(MP_QSTR_SPI_SLAVE_SCLK, (const byte*)"\x95\x0e" "SPI_SLAVE_SCLK")
QDEF(MP_QSTR_I2S0_MCLK, (const byte*)"\xcb\x09" "I2S0_MCLK")
QDEF(MP_QSTR_I2S0_SCLK, (const byte*)"\x95\x09" "I2S0_SCLK")
QDEF(MP_QSTR_I2S0_WS, (const byte*)"\x86\x07" "I2S0_WS")
QDEF(MP_QSTR_I2S0_IN_D0, (const byte*)"\xce\x0a" "I2S0_IN_D0")
QDEF(MP_QSTR_I2S0_IN_D1, (const byte*)"\xcf\x0a" "I2S0_IN_D1")
QDEF(MP_QSTR_I2S0_IN_D2, (const byte*)"\xcc\x0a" "I2S0_IN_D2")
QDEF(MP_QSTR_I2S0_IN_D3, (const byte*)"\xcd\x0a" "I2S0_IN_D3")
QDEF(MP_QSTR_I2S0_OUT_D0, (const byte*)"\x27\x0b" "I2S0_OUT_D0")
QDEF(MP_QSTR_I2S0_OUT_D1, (const byte*)"\x26\x0b" "I2S0_OUT_D1")
QDEF(MP_QSTR_I2S0_OUT_D2, (const byte*)"\x25\x0b" "I2S0_OUT_D2")
QDEF(MP_QSTR_I2S0_OUT_D3, (const byte*)"\x24\x0b" "I2S0_OUT_D3")
QDEF(MP_QSTR_I2S1_MCLK, (const byte*)"\x6a\x09" "I2S1_MCLK")
QDEF(MP_QSTR_I2S1_SCLK, (const byte*)"\x34\x09" "I2S1_SCLK")
QDEF(MP_QSTR_I2S1_WS, (const byte*)"\xe7\x07" "I2S1_WS")
QDEF(MP_QSTR_I2S1_IN_D0, (const byte*)"\xcf\x0a" "I2S1_IN_D0")
QDEF(MP_QSTR_I2S1_IN_D1, (const byte*)"\xce\x0a" "I2S1_IN_D1")
QDEF(MP_QSTR_I2S1_IN_D2, (const byte*)"\xcd\x0a" "I2S1_IN_D2")
QDEF(MP_QSTR_I2S1_IN_D3, (const byte*)"\xcc\x0a" "I2S1_IN_D3")
QDEF(MP_QSTR_I2S1_OUT_D0, (const byte*)"\x46\x0b" "I2S1_OUT_D0")
QDEF(MP_QSTR_I2S1_OUT_D1, (const byte*)"\x47\x0b" "I2S1_OUT_D1")
QDEF(MP_QSTR_I2S1_OUT_D2, (const byte*)"\x44\x0b" "I2S1_OUT_D2")
QDEF(MP_QSTR_I2S1_OUT_D3, (const byte*)"\x45\x0b" "I2S1_OUT_D3")
QDEF(MP_QSTR_I2S2_MCLK, (const byte*)"\x89\x09" "I2S2_MCLK")
QDEF(MP_QSTR_I2S2_SCLK, (const byte*)"\xd7\x09" "I2S2_SCLK")
QDEF(MP_QSTR_I2S2_WS, (const byte*)"\xc4\x07" "I2S2_WS")
QDEF(MP_QSTR_I2S2_IN_D0, (const byte*)"\xcc\x0a" "I2S2_IN_D0")
QDEF(MP_QSTR_I2S2_IN_D1, (const byte*)"\xcd\x0a" "I2S2_IN_D1")
QDEF(MP_QSTR_I2S2_IN_D2, (const byte*)"\xce\x0a" "I2S2_IN_D2")
QDEF(MP_QSTR_I2S2_IN_D3, (const byte*)"\xcf\x0a" "I2S2_IN_D3")
QDEF(MP_QSTR_I2S2_OUT_D0, (const byte*)"\xe5\x0b" "I2S2_OUT_D0")
QDEF(MP_QSTR_I2S2_OUT_D1, (const byte*)"\xe4\x0b" "I2S2_OUT_D1")
QDEF(MP_QSTR_I2S2_OUT_D2, (const byte*)"\xe7\x0b" "I2S2_OUT_D2")
QDEF(MP_QSTR_I2S2_OUT_D3, (const byte*)"\xe6\x0b" "I2S2_OUT_D3")
QDEF(MP_QSTR_I2C0_SCLK, (const byte*)"\x85\x09" "I2C0_SCLK")
QDEF(MP_QSTR_I2C0_SDA, (const byte*)"\xe4\x08" "I2C0_SDA")
QDEF(MP_QSTR_I2C1_SCLK, (const byte*)"\x24\x09" "I2C1_SCLK")
QDEF(MP_QSTR_I2C1_SDA, (const byte*)"\xa5\x08" "I2C1_SDA")
QDEF(MP_QSTR_I2C2_SCLK, (const byte*)"\xc7\x09" "I2C2_SCLK")
QDEF(MP_QSTR_I2C2_SDA, (const byte*)"\x66\x08" "I2C2_SDA")
QDEF(MP_QSTR_CMOS_XCLK, (const byte*)"\xb4\x09" "CMOS_XCLK")
QDEF(MP_QSTR_CMOS_RST, (const byte*)"\x9d\x08" "CMOS_RST")
QDEF(MP_QSTR_CMOS_PWDN, (const byte*)"\xa5\x09" "CMOS_PWDN")
QDEF(MP_QSTR_CMOS_VSYNC, (const byte*)"\xd9\x0a" "CMOS_VSYNC")
QDEF(MP_QSTR_CMOS_HREF, (const byte*)"\x11\x09" "CMOS_HREF")
QDEF(MP_QSTR_CMOS_PCLK, (const byte*)"\xbc\x09" "CMOS_PCLK")
QDEF(MP_QSTR_CMOS_D0, (const byte*)"\x1c\x07" "CMOS_D0")
QDEF(MP_QSTR_CMOS_D1, (const byte*)"\x1d\x07" "CMOS_D1")
QDEF(MP_QSTR_CMOS_D2, (const byte*)"\x1e\x07" "CMOS_D2")
QDEF(MP_QSTR_CMOS_D3, (const byte*)"\x1f\x07" "CMOS_D3")
QDEF(MP_QSTR_CMOS_D4, (const byte*)"\x18\x07" "CMOS_D4")
QDEF(MP_QSTR_CMOS_D5, (const byte*)"\x19\x07" "CMOS_D5")
QDEF(MP_QSTR_CMOS_D6, (const byte*)"\x1a\x07" "CMOS_D6")
QDEF(MP_QSTR_CMOS_D7, (const byte*)"\x1b\x07" "CMOS_D7")
QDEF(MP_QSTR_SCCB_SCLK, (const byte*)"\x3c\x09" "SCCB_SCLK")
QDEF(MP_QSTR_SCCB_SDA, (const byte*)"\xbd\x08" "SCCB_SDA")
QDEF(MP_QSTR_UART1_CTS, (const byte*)"\x9d\x09" "UART1_CTS")
QDEF(MP_QSTR_UART1_DSR, (const byte*)"\xfc\x09" "UART1_DSR")
QDEF(MP_QSTR_UART1_DCD, (const byte*)"\xfa\x09" "UART1_DCD")
QDEF(MP_QSTR_UART1_RI, (const byte*)"\x22\x08" "UART1_RI")
QDEF(MP_QSTR_UART1_SIR_IN, (const byte*)"\x29\x0c" "UART1_SIR_IN")
QDEF(MP_QSTR_UART1_DTR, (const byte*)"\x5b\x09" "UART1_DTR")
QDEF(MP_QSTR_UART1_RTS, (const byte*)"\x4c\x09" "UART1_RTS")
QDEF(MP_QSTR_UART1_OUT2, (const byte*)"\xa5\x0a" "UART1_OUT2")
QDEF(MP_QSTR_UART1_OUT1, (const byte*)"\xa6\x0a" "UART1_OUT1")
QDEF(MP_QSTR_UART1_SIR_OUT, (const byte*)"\x20\x0d" "UART1_SIR_OUT")
QDEF(MP_QSTR_UART1_BAUD, (const byte*)"\x4b\x0a" "UART1_BAUD")
QDEF(MP_QSTR_UART1_RE, (const byte*)"\x2e\x08" "UART1_RE")
QDEF(MP_QSTR_UART1_DE, (const byte*)"\xf8\x08" "UART1_DE")
QDEF(MP_QSTR_UART1_RS485_EN, (const byte*)"\x95\x0e" "UART1_RS485_EN")
QDEF(MP_QSTR_UART2_CTS, (const byte*)"\x5e\x09" "UART2_CTS")
QDEF(MP_QSTR_UART2_DSR, (const byte*)"\x7f\x09" "UART2_DSR")
QDEF(MP_QSTR_UART2_DCD, (const byte*)"\x79\x09" "UART2_DCD")
QDEF(MP_QSTR_UART2_RI, (const byte*)"\x41\x08" "UART2_RI")
QDEF(MP_QSTR_UART2_SIR_IN, (const byte*)"\x4a\x0c" "UART2_SIR_IN")
QDEF(MP_QSTR_UART2_DTR, (const byte*)"\x98\x09" "UART2_DTR")
QDEF(MP_QSTR_UART2_RTS, (const byte*)"\x8f\x09" "UART2_RTS")
QDEF(MP_QSTR_UART2_OUT2, (const byte*)"\x06\x0a" "UART2_OUT2")
QDEF(MP_QSTR_UART2_OUT1, (const byte*)"\x05\x0a" "UART2_OUT1")
QDEF(MP_QSTR_UART2_SIR_OUT, (const byte*)"\x23\x0d" "UART2_SIR_OUT")
QDEF(MP_QSTR_UART2_BAUD, (const byte*)"\xe8\x0a" "UART2_BAUD")
QDEF(MP_QSTR_UART2_RE, (const byte*)"\x4d\x08" "UART2_RE")
QDEF(MP_QSTR_UART2_DE, (const byte*)"\x9b\x08" "UART2_DE")
QDEF(MP_QSTR_UART2_RS485_EN, (const byte*)"\xb6\x0e" "UART2_RS485_EN")
QDEF(MP_QSTR_UART3_CTS, (const byte*)"\x1f\x09" "UART3_CTS")
QDEF(MP_QSTR_UART3_DSR, (const byte*)"\xfe\x09" "UART3_DSR")
QDEF(MP_QSTR_UART3_DCD, (const byte*)"\xf8\x09" "UART3_DCD")
QDEF(MP_QSTR_UART3_RI, (const byte*)"\xe0\x08" "UART3_RI")
QDEF(MP_QSTR_UART3_SIR_IN, (const byte*)"\x6b\x0c" "UART3_SIR_IN")
QDEF(MP_QSTR_UART3_DTR, (const byte*)"\xd9\x09" "UART3_DTR")
QDEF(MP_QSTR_UART3_RTS, (const byte*)"\xce\x09" "UART3_RTS")
QDEF(MP_QSTR_UART3_OUT2, (const byte*)"\xe7\x0a" "UART3_OUT2")
QDEF(MP_QSTR_UART3_OUT1, (const byte*)"\xe4\x0a" "UART3_OUT1")
QDEF(MP_QSTR_UART3_SIR_OUT, (const byte*)"\x22\x0d" "UART3_SIR_OUT")
QDEF(MP_QSTR_UART3_BAUD, (const byte*)"\x09\x0a" "UART3_BAUD")
QDEF(MP_QSTR_UART3_RE, (const byte*)"\xec\x08" "UART3_RE")
QDEF(MP_QSTR_UART3_DE, (const byte*)"\x3a\x08" "UART3_DE")
QDEF(MP_QSTR_UART3_RS485_EN, (const byte*)"\xd7\x0e" "UART3_RS485_EN")
QDEF(MP_QSTR_TIMER0_TOGGLE1, (const byte*)"\xee\x0e" "TIMER0_TOGGLE1")
QDEF(MP_QSTR_TIMER0_TOGGLE2, (const byte*)"\xed\x0e" "TIMER0_TOGGLE2")
QDEF(MP_QSTR_TIMER0_TOGGLE3, (const byte*)"\xec\x0e" "TIMER0_TOGGLE3")
QDEF(MP_QSTR_TIMER0_TOGGLE4, (const byte*)"\xeb\x0e" "TIMER0_TOGGLE4")
QDEF(MP_QSTR_TIMER1_TOGGLE1, (const byte*)"\xef\x0e" "TIMER1_TOGGLE1")
QDEF(MP_QSTR_TIMER1_TOGGLE2, (const byte*)"\xec\x0e" "TIMER1_TOGGLE2")
QDEF(MP_QSTR_TIMER1_TOGGLE3, (const byte*)"\xed\x0e" "TIMER1_TOGGLE3")
QDEF(MP_QSTR_TIMER1_TOGGLE4, (const byte*)"\xea\x0e" "TIMER1_TOGGLE4")
QDEF(MP_QSTR_TIMER2_TOGGLE1, (const byte*)"\x6c\x0e" "TIMER2_TOGGLE1")
QDEF(MP_QSTR_TIMER2_TOGGLE2, (const byte*)"\x6f\x0e" "TIMER2_TOGGLE2")
QDEF(MP_QSTR_TIMER2_TOGGLE3, (const byte*)"\x6e\x0e" "TIMER2_TOGGLE3")
QDEF(MP_QSTR_TIMER2_TOGGLE4, (const byte*)"\x69\x0e" "TIMER2_TOGGLE4")
QDEF(MP_QSTR_CLK_SPI2, (const byte*)"\x26\x08" "CLK_SPI2")
QDEF(MP_QSTR_CLK_I2C2, (const byte*)"\x14\x08" "CLK_I2C2")
QDEF(MP_QSTR_DRIVING_0, (const byte*)"\x63\x09" "DRIVING_0")
QDEF(MP_QSTR_DRIVING_1, (const byte*)"\x62\x09" "DRIVING_1")
QDEF(MP_QSTR_DRIVING_2, (const byte*)"\x61\x09" "DRIVING_2")
QDEF(MP_QSTR_DRIVING_3, (const byte*)"\x60\x09" "DRIVING_3")
QDEF(MP_QSTR_DRIVING_4, (const byte*)"\x67\x09" "DRIVING_4")
QDEF(MP_QSTR_DRIVING_5, (const byte*)"\x66\x09" "DRIVING_5")
QDEF(MP_QSTR_DRIVING_6, (const byte*)"\x65\x09" "DRIVING_6")
QDEF(MP_QSTR_DRIVING_7, (const byte*)"\x64\x09" "DRIVING_7")
QDEF(MP_QSTR_DRIVING_8, (const byte*)"\x6b\x09" "DRIVING_8")
QDEF(MP_QSTR_DRIVING_9, (const byte*)"\x6a\x09" "DRIVING_9")
QDEF(MP_QSTR_DRIVING_10, (const byte*)"\x92\x0a" "DRIVING_10")
QDEF(MP_QSTR_DRIVING_11, (const byte*)"\x93\x0a" "DRIVING_11")
QDEF(MP_QSTR_DRIVING_12, (const byte*)"\x90\x0a" "DRIVING_12")
QDEF(MP_QSTR_DRIVING_13, (const byte*)"\x91\x0a" "DRIVING_13")
QDEF(MP_QSTR_DRIVING_14, (const byte*)"\x96\x0a" "DRIVING_14")
QDEF(MP_QSTR_DRIVING_15, (const byte*)"\x97\x0a" "DRIVING_15")

QDEF(MP_QSTR_lcdctl, (const byte*)"\x95\x06" "lcdctl")
QDEF(MP_QSTR_set_direction, (const byte*)"\x5d\x0d" "set_direction")
QDEF(MP_QSTR_XY_LRUD, (const byte*)"\xf4\x07" "XY_LRUD")
QDEF(MP_QSTR_YX_LRDU, (const byte*)"\x74\x07" "YX_LRDU")
QDEF(MP_QSTR_XY_RLUD, (const byte*)"\xb4\x07" "XY_RLUD")
QDEF(MP_QSTR_YX_RLUD, (const byte*)"\x14\x07" "YX_RLUD")
QDEF(MP_QSTR_XY_LRDU, (const byte*)"\x94\x07" "XY_LRDU")
QDEF(MP_QSTR_YX_LRUD, (const byte*)"\x54\x07" "YX_LRUD")
QDEF(MP_QSTR_XY_RLDU, (const byte*)"\x54\x07" "XY_RLDU")
QDEF(MP_QSTR_YX_RLDU, (const byte*)"\x34\x07" "YX_RLDU")


QDEF(MP_QSTR_KPU, (const byte*)"\xeb\x03" "KPU")
QDEF(MP_QSTR_load_kmodel, (const byte*)"\x78\x0b" "load_kmodel")
QDEF(MP_QSTR_dma, (const byte*)"\x6d\x03" "dma")
QDEF(MP_QSTR_get_output, (const byte*)"\xd3\x0a" "get_output")
QDEF(MP_QSTR_regionlayer_init, (const byte*)"\x9b\x10" "regionlayer_init")
QDEF(MP_QSTR_regionlayer, (const byte*)"\x1e\x0b" "regionlayer")
QDEF(MP_QSTR_getlist, (const byte*)"\xd1\x07" "getlist")
QDEF(MP_QSTR_in_h, (const byte*)"\xb5\x04" "in_h")
QDEF(MP_QSTR_cls_num, (const byte*)"\xf0\x07" "cls_num")
QDEF(MP_QSTR_variances, (const byte*)"\xb3\x09" "variances")
QDEF(MP_QSTR_crood_num, (const byte*)"\x99\x09" "crood_num")
QDEF(MP_QSTR_in_w, (const byte*)"\xaa\x04" "in_w")
QDEF(MP_QSTR_landm_num, (const byte*)"\xc6\x09" "landm_num")
QDEF(MP_QSTR_obj_thresh, (const byte*)"\x6d\x0a" "obj_thresh")
QDEF(MP_QSTR_nms_thresh, (const byte*)"\xfa\x0a" "nms_thresh")
QDEF(MP_QSTR_anchor_num, (const byte*)"\x55\x0a" "anchor_num")
QDEF(MP_QSTR_max_num, (const byte*)"\x98\x07" "max_num")
QDEF(MP_QSTR_anchor, (const byte*)"\xbc\x06" "anchor")
#ifndef PKG_USING_OPENMV_CP
QDEF(MP_QSTR_size, (const byte*)"\x20\x04" "size")
#endif  //PKG_USING_OPENMV_CP
#include "qstrdefscam.h"
